The original build mechanism used batch scripting to define all the build steps. Now that versioning of the application
is done by parsing the branch name (assuming you use the release format), the steps are slightly different.

Steps to Build
    1. Create a release branch in release format ex: release/1.7.0
    2. Checkout the branch
    3. Run the respective build script in the terminal ex: >build_release.bat
    4. Check console for any logged issues with the build.


How the new system works:

The only versioning the developer has to do is the branch version number. The rest is automated.

To perform the branch name parsing, we switched to python for the build script implementation. You can run build.py
if you'd like. In fact, the build batch files do the same thing, just sets a flag if debug mode.

Pulls the version number from the branch name.
Builds the version_spec.yml file using the version number and template.
Writes the version to the version.txt file in the resources folder.
Builds the app.
Copies over the resources.

The StockBench app now uses the version.txt file to dynamically display its version in QT windows. The version_spec.yaml
file also makes it so that the physical executable file properties display the same version as well.
